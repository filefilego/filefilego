// Code generated by MockGen. DO NOT EDIT.
// Source: data_transfer.go

// Package rpc is a generated GoMock package.
package rpc

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	peer "github.com/libp2p/go-libp2p/core/peer"
)

// MockPublisherNodesFinder is a mock of PublisherNodesFinder interface.
type MockPublisherNodesFinder struct {
	ctrl     *gomock.Controller
	recorder *MockPublisherNodesFinderMockRecorder
}

// MockPublisherNodesFinderMockRecorder is the mock recorder for MockPublisherNodesFinder.
type MockPublisherNodesFinderMockRecorder struct {
	mock *MockPublisherNodesFinder
}

// NewMockPublisherNodesFinder creates a new mock instance.
func NewMockPublisherNodesFinder(ctrl *gomock.Controller) *MockPublisherNodesFinder {
	mock := &MockPublisherNodesFinder{ctrl: ctrl}
	mock.recorder = &MockPublisherNodesFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublisherNodesFinder) EXPECT() *MockPublisherNodesFinderMockRecorder {
	return m.recorder
}

// FindPeers mocks base method.
func (m *MockPublisherNodesFinder) FindPeers(ctx context.Context, peerIDs []peer.ID) []peer.AddrInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindPeers", ctx, peerIDs)
	ret0, _ := ret[0].([]peer.AddrInfo)
	return ret0
}

// FindPeers indicates an expected call of FindPeers.
func (mr *MockPublisherNodesFinderMockRecorder) FindPeers(ctx, peerIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindPeers", reflect.TypeOf((*MockPublisherNodesFinder)(nil).FindPeers), ctx, peerIDs)
}

// PublishMessageToNetwork mocks base method.
func (m *MockPublisherNodesFinder) PublishMessageToNetwork(ctx context.Context, topicName string, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishMessageToNetwork", ctx, topicName, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishMessageToNetwork indicates an expected call of PublishMessageToNetwork.
func (mr *MockPublisherNodesFinderMockRecorder) PublishMessageToNetwork(ctx, topicName, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishMessageToNetwork", reflect.TypeOf((*MockPublisherNodesFinder)(nil).PublishMessageToNetwork), ctx, topicName, data)
}
