// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: blockchain/types.proto

package blockchain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NodeItemType represents the type of each node.
type NodeItemType int32

const (
	NodeItemType_UNKNOWN    NodeItemType = 0
	NodeItemType_CHANNEL    NodeItemType = 1
	NodeItemType_SUBCHANNEL NodeItemType = 2
	NodeItemType_ENTRY      NodeItemType = 3
	NodeItemType_DIR        NodeItemType = 4
	NodeItemType_FILE       NodeItemType = 5
	NodeItemType_OTHER      NodeItemType = 6
)

// Enum value maps for NodeItemType.
var (
	NodeItemType_name = map[int32]string{
		0: "UNKNOWN",
		1: "CHANNEL",
		2: "SUBCHANNEL",
		3: "ENTRY",
		4: "DIR",
		5: "FILE",
		6: "OTHER",
	}
	NodeItemType_value = map[string]int32{
		"UNKNOWN":    0,
		"CHANNEL":    1,
		"SUBCHANNEL": 2,
		"ENTRY":      3,
		"DIR":        4,
		"FILE":       5,
		"OTHER":      6,
	}
)

func (x NodeItemType) Enum() *NodeItemType {
	p := new(NodeItemType)
	*p = x
	return p
}

func (x NodeItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_types_proto_enumTypes[0].Descriptor()
}

func (NodeItemType) Type() protoreflect.EnumType {
	return &file_blockchain_types_proto_enumTypes[0]
}

func (x NodeItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeItemType.Descriptor instead.
func (NodeItemType) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_types_proto_rawDescGZIP(), []int{0}
}

// AddressStateProto represents the state of an address in a proto message.
type AddressStateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// balance represents the address balance.
	Balance []byte `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// nounce represents the current nounce of the address.
	Nounce []byte `protobuf:"bytes,2,opt,name=nounce,proto3" json:"nounce,omitempty"`
}

func (x *AddressStateProto) Reset() {
	*x = AddressStateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressStateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressStateProto) ProtoMessage() {}

func (x *AddressStateProto) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressStateProto.ProtoReflect.Descriptor instead.
func (*AddressStateProto) Descriptor() ([]byte, []int) {
	return file_blockchain_types_proto_rawDescGZIP(), []int{0}
}

func (x *AddressStateProto) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AddressStateProto) GetNounce() []byte {
	if x != nil {
		return x.Nounce
	}
	return nil
}

// NodeItem is used to represent a hierarchical struct of channels, subchannels directories etc.
type NodeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeHash    []byte       `protobuf:"bytes,2,opt,name=node_hash,json=nodeHash,proto3" json:"node_hash,omitempty"`
	Owner       []byte       `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Enabled     bool         `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	NodeType    NodeItemType `protobuf:"varint,5,opt,name=node_type,json=nodeType,proto3,enum=blockchain.NodeItemType" json:"node_type,omitempty"`
	Attributes  [][]byte     `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Admins      [][]byte     `protobuf:"bytes,7,rep,name=admins,proto3" json:"admins,omitempty"`
	Posters     [][]byte     `protobuf:"bytes,8,rep,name=posters,proto3" json:"posters,omitempty"`
	Timestamp   int64        `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Description *string      `protobuf:"bytes,10,opt,name=description,proto3,oneof" json:"description,omitempty"`
	MerkleRoot  []byte       `protobuf:"bytes,11,opt,name=merkle_root,json=merkleRoot,proto3,oneof" json:"merkle_root,omitempty"`
	FileHash    []byte       `protobuf:"bytes,12,opt,name=file_hash,json=fileHash,proto3,oneof" json:"file_hash,omitempty"`
	Size        *uint64      `protobuf:"varint,13,opt,name=size,proto3,oneof" json:"size,omitempty"`
	ParentHash  []byte       `protobuf:"bytes,14,opt,name=parent_hash,json=parentHash,proto3,oneof" json:"parent_hash,omitempty"`
	ContentType *string      `protobuf:"bytes,15,opt,name=content_type,json=contentType,proto3,oneof" json:"content_type,omitempty"`
}

func (x *NodeItem) Reset() {
	*x = NodeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeItem) ProtoMessage() {}

func (x *NodeItem) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeItem.ProtoReflect.Descriptor instead.
func (*NodeItem) Descriptor() ([]byte, []int) {
	return file_blockchain_types_proto_rawDescGZIP(), []int{1}
}

func (x *NodeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeItem) GetNodeHash() []byte {
	if x != nil {
		return x.NodeHash
	}
	return nil
}

func (x *NodeItem) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *NodeItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NodeItem) GetNodeType() NodeItemType {
	if x != nil {
		return x.NodeType
	}
	return NodeItemType_UNKNOWN
}

func (x *NodeItem) GetAttributes() [][]byte {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *NodeItem) GetAdmins() [][]byte {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *NodeItem) GetPosters() [][]byte {
	if x != nil {
		return x.Posters
	}
	return nil
}

func (x *NodeItem) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NodeItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NodeItem) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *NodeItem) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *NodeItem) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *NodeItem) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *NodeItem) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

// NodeItems is an envelope of nodes.
type NodeItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeItem `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodeItems) Reset() {
	*x = NodeItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeItems) ProtoMessage() {}

func (x *NodeItems) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeItems.ProtoReflect.Descriptor instead.
func (*NodeItems) Descriptor() ([]byte, []int) {
	return file_blockchain_types_proto_rawDescGZIP(), []int{2}
}

func (x *NodeItems) GetNodes() []*NodeItem {
	if x != nil {
		return x.Nodes
	}
	return nil
}

var File_blockchain_types_proto protoreflect.FileDescriptor

var file_blockchain_types_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x22, 0x45, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x22, 0xc0, 0x04, 0x0a, 0x08,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x02, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x37,
	0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x2a, 0x61, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x42, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x44, 0x49, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x05, 0x12,
	0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x06, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x66, 0x69, 0x6c,
	0x65, 0x67, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x67, 0x6f, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_blockchain_types_proto_rawDescOnce sync.Once
	file_blockchain_types_proto_rawDescData = file_blockchain_types_proto_rawDesc
)

func file_blockchain_types_proto_rawDescGZIP() []byte {
	file_blockchain_types_proto_rawDescOnce.Do(func() {
		file_blockchain_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_types_proto_rawDescData)
	})
	return file_blockchain_types_proto_rawDescData
}

var file_blockchain_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_blockchain_types_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_blockchain_types_proto_goTypes = []interface{}{
	(NodeItemType)(0),         // 0: blockchain.NodeItemType
	(*AddressStateProto)(nil), // 1: blockchain.AddressStateProto
	(*NodeItem)(nil),          // 2: blockchain.NodeItem
	(*NodeItems)(nil),         // 3: blockchain.NodeItems
}
var file_blockchain_types_proto_depIdxs = []int32{
	0, // 0: blockchain.NodeItem.node_type:type_name -> blockchain.NodeItemType
	2, // 1: blockchain.NodeItems.nodes:type_name -> blockchain.NodeItem
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blockchain_types_proto_init() }
func file_blockchain_types_proto_init() {
	if File_blockchain_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blockchain_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressStateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blockchain_types_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blockchain_types_proto_goTypes,
		DependencyIndexes: file_blockchain_types_proto_depIdxs,
		EnumInfos:         file_blockchain_types_proto_enumTypes,
		MessageInfos:      file_blockchain_types_proto_msgTypes,
	}.Build()
	File_blockchain_types_proto = out.File
	file_blockchain_types_proto_rawDesc = nil
	file_blockchain_types_proto_goTypes = nil
	file_blockchain_types_proto_depIdxs = nil
}
