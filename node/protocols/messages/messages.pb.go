// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: node/protocols/messages/messages.proto

package messages

import (
	block "github.com/filefilego/filefilego/block"
	transaction "github.com/filefilego/filefilego/transaction"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GossipPayload represents a gossip payload.
type GossipPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*GossipPayload_Blocks
	//	*GossipPayload_Transaction
	//	*GossipPayload_Query
	//	*GossipPayload_StorageQuery
	Message isGossipPayload_Message `protobuf_oneof:"message"`
}

func (x *GossipPayload) Reset() {
	*x = GossipPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPayload) ProtoMessage() {}

func (x *GossipPayload) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPayload.ProtoReflect.Descriptor instead.
func (*GossipPayload) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{0}
}

func (m *GossipPayload) GetMessage() isGossipPayload_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *GossipPayload) GetBlocks() *ProtoBlocks {
	if x, ok := x.GetMessage().(*GossipPayload_Blocks); ok {
		return x.Blocks
	}
	return nil
}

func (x *GossipPayload) GetTransaction() *transaction.ProtoTransaction {
	if x, ok := x.GetMessage().(*GossipPayload_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (x *GossipPayload) GetQuery() *DataQueryRequestProto {
	if x, ok := x.GetMessage().(*GossipPayload_Query); ok {
		return x.Query
	}
	return nil
}

func (x *GossipPayload) GetStorageQuery() *StorageQueryRequestProto {
	if x, ok := x.GetMessage().(*GossipPayload_StorageQuery); ok {
		return x.StorageQuery
	}
	return nil
}

type isGossipPayload_Message interface {
	isGossipPayload_Message()
}

type GossipPayload_Blocks struct {
	Blocks *ProtoBlocks `protobuf:"bytes,1,opt,name=blocks,proto3,oneof"`
}

type GossipPayload_Transaction struct {
	Transaction *transaction.ProtoTransaction `protobuf:"bytes,2,opt,name=transaction,proto3,oneof"`
}

type GossipPayload_Query struct {
	Query *DataQueryRequestProto `protobuf:"bytes,3,opt,name=query,proto3,oneof"`
}

type GossipPayload_StorageQuery struct {
	StorageQuery *StorageQueryRequestProto `protobuf:"bytes,4,opt,name=storage_query,json=storageQuery,proto3,oneof"`
}

func (*GossipPayload_Blocks) isGossipPayload_Message() {}

func (*GossipPayload_Transaction) isGossipPayload_Message() {}

func (*GossipPayload_Query) isGossipPayload_Message() {}

func (*GossipPayload_StorageQuery) isGossipPayload_Message() {}

// ProtoBlocks is the proto representation of blocks envelope.
type ProtoBlocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*block.ProtoBlock `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *ProtoBlocks) Reset() {
	*x = ProtoBlocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlocks) ProtoMessage() {}

func (x *ProtoBlocks) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlocks.ProtoReflect.Descriptor instead.
func (*ProtoBlocks) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoBlocks) GetBlocks() []*block.ProtoBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// StorageQueryRequestProto represents a storage query message.
type StorageQueryRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPeerAddr      string `protobuf:"bytes,1,opt,name=from_peer_addr,json=fromPeerAddr,proto3" json:"from_peer_addr,omitempty"`
	PreferredLocation string `protobuf:"bytes,2,opt,name=preferred_location,json=preferredLocation,proto3" json:"preferred_location,omitempty"`
}

func (x *StorageQueryRequestProto) Reset() {
	*x = StorageQueryRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageQueryRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageQueryRequestProto) ProtoMessage() {}

func (x *StorageQueryRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageQueryRequestProto.ProtoReflect.Descriptor instead.
func (*StorageQueryRequestProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{2}
}

func (x *StorageQueryRequestProto) GetFromPeerAddr() string {
	if x != nil {
		return x.FromPeerAddr
	}
	return ""
}

func (x *StorageQueryRequestProto) GetPreferredLocation() string {
	if x != nil {
		return x.PreferredLocation
	}
	return ""
}

// StorageQueryResponseProto represents a storage response message.
type StorageQueryResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageProviderPeerAddr string `protobuf:"bytes,1,opt,name=storage_provider_peer_addr,json=storageProviderPeerAddr,proto3" json:"storage_provider_peer_addr,omitempty"`
	Location                string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	FeesPerByte             string `protobuf:"bytes,3,opt,name=fees_per_byte,json=feesPerByte,proto3" json:"fees_per_byte,omitempty"`
	PublicKey               []byte `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Hash                    []byte `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Signature               []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *StorageQueryResponseProto) Reset() {
	*x = StorageQueryResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageQueryResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageQueryResponseProto) ProtoMessage() {}

func (x *StorageQueryResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageQueryResponseProto.ProtoReflect.Descriptor instead.
func (*StorageQueryResponseProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{3}
}

func (x *StorageQueryResponseProto) GetStorageProviderPeerAddr() string {
	if x != nil {
		return x.StorageProviderPeerAddr
	}
	return ""
}

func (x *StorageQueryResponseProto) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *StorageQueryResponseProto) GetFeesPerByte() string {
	if x != nil {
		return x.FeesPerByte
	}
	return ""
}

func (x *StorageQueryResponseProto) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *StorageQueryResponseProto) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *StorageQueryResponseProto) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// StorageFileUploadMetadataProto represents a file's name and associated channel node item hash.
type StorageFileUploadMetadataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName        string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ChannelNodeHash string `protobuf:"bytes,2,opt,name=channel_node_hash,json=channelNodeHash,proto3" json:"channel_node_hash,omitempty"`
}

func (x *StorageFileUploadMetadataProto) Reset() {
	*x = StorageFileUploadMetadataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageFileUploadMetadataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageFileUploadMetadataProto) ProtoMessage() {}

func (x *StorageFileUploadMetadataProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageFileUploadMetadataProto.ProtoReflect.Descriptor instead.
func (*StorageFileUploadMetadataProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{4}
}

func (x *StorageFileUploadMetadataProto) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *StorageFileUploadMetadataProto) GetChannelNodeHash() string {
	if x != nil {
		return x.ChannelNodeHash
	}
	return ""
}

// DataQueryRequestProto represents a data query message.
type DataQueryRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHashes   [][]byte `protobuf:"bytes,1,rep,name=file_hashes,json=fileHashes,proto3" json:"file_hashes,omitempty"`
	FromPeerAddr string   `protobuf:"bytes,2,opt,name=from_peer_addr,json=fromPeerAddr,proto3" json:"from_peer_addr,omitempty"`
	Hash         []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Timestamp    int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DataQueryRequestProto) Reset() {
	*x = DataQueryRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataQueryRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQueryRequestProto) ProtoMessage() {}

func (x *DataQueryRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQueryRequestProto.ProtoReflect.Descriptor instead.
func (*DataQueryRequestProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{5}
}

func (x *DataQueryRequestProto) GetFileHashes() [][]byte {
	if x != nil {
		return x.FileHashes
	}
	return nil
}

func (x *DataQueryRequestProto) GetFromPeerAddr() string {
	if x != nil {
		return x.FromPeerAddr
	}
	return ""
}

func (x *DataQueryRequestProto) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DataQueryRequestProto) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// DataQueryResponseProto represents a data query response.
type DataQueryResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPeerAddr string `protobuf:"bytes,1,opt,name=from_peer_addr,json=fromPeerAddr,proto3" json:"from_peer_addr,omitempty"`
	FeesPerByte  string `protobuf:"bytes,2,opt,name=fees_per_byte,json=feesPerByte,proto3" json:"fees_per_byte,omitempty"`
	// hash_data_query_request must be same as the DataQueryRequestProto hash
	HashDataQueryRequest []byte   `protobuf:"bytes,3,opt,name=hash_data_query_request,json=hashDataQueryRequest,proto3" json:"hash_data_query_request,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature            []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	FileHashes           [][]byte `protobuf:"bytes,6,rep,name=file_hashes,json=fileHashes,proto3" json:"file_hashes,omitempty"`
	// file_hashes_sizes contains the file sizes of each hash in file_hashes.
	FileHashesSizes       []uint64 `protobuf:"varint,7,rep,packed,name=file_hashes_sizes,json=fileHashesSizes,proto3" json:"file_hashes_sizes,omitempty"`
	UnavailableFileHashes [][]byte `protobuf:"bytes,8,rep,name=unavailable_file_hashes,json=unavailableFileHashes,proto3" json:"unavailable_file_hashes,omitempty"`
	Timestamp             int64    `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DataQueryResponseProto) Reset() {
	*x = DataQueryResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataQueryResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQueryResponseProto) ProtoMessage() {}

func (x *DataQueryResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQueryResponseProto.ProtoReflect.Descriptor instead.
func (*DataQueryResponseProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{6}
}

func (x *DataQueryResponseProto) GetFromPeerAddr() string {
	if x != nil {
		return x.FromPeerAddr
	}
	return ""
}

func (x *DataQueryResponseProto) GetFeesPerByte() string {
	if x != nil {
		return x.FeesPerByte
	}
	return ""
}

func (x *DataQueryResponseProto) GetHashDataQueryRequest() []byte {
	if x != nil {
		return x.HashDataQueryRequest
	}
	return nil
}

func (x *DataQueryResponseProto) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *DataQueryResponseProto) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DataQueryResponseProto) GetFileHashes() [][]byte {
	if x != nil {
		return x.FileHashes
	}
	return nil
}

func (x *DataQueryResponseProto) GetFileHashesSizes() []uint64 {
	if x != nil {
		return x.FileHashesSizes
	}
	return nil
}

func (x *DataQueryResponseProto) GetUnavailableFileHashes() [][]byte {
	if x != nil {
		return x.UnavailableFileHashes
	}
	return nil
}

func (x *DataQueryResponseProto) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// DataQueryResponseTransferProto is used to request a data query response from a verifier.
type DataQueryResponseTransferProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *DataQueryResponseTransferProto) Reset() {
	*x = DataQueryResponseTransferProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataQueryResponseTransferProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQueryResponseTransferProto) ProtoMessage() {}

func (x *DataQueryResponseTransferProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQueryResponseTransferProto.ProtoReflect.Descriptor instead.
func (*DataQueryResponseTransferProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{7}
}

func (x *DataQueryResponseTransferProto) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// DataQueryResponseTransferResultProto encapsulates multiple data query responses from verifier to the querying node.
type DataQueryResponseTransferResultProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*DataQueryResponseProto `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *DataQueryResponseTransferResultProto) Reset() {
	*x = DataQueryResponseTransferResultProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataQueryResponseTransferResultProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQueryResponseTransferResultProto) ProtoMessage() {}

func (x *DataQueryResponseTransferResultProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQueryResponseTransferResultProto.ProtoReflect.Descriptor instead.
func (*DataQueryResponseTransferResultProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{8}
}

func (x *DataQueryResponseTransferResultProto) GetResponses() []*DataQueryResponseProto {
	if x != nil {
		return x.Responses
	}
	return nil
}

// BlockchainHeightResponseProto represents the height of a node's blockchain.
type BlockchainHeightResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *BlockchainHeightResponseProto) Reset() {
	*x = BlockchainHeightResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainHeightResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainHeightResponseProto) ProtoMessage() {}

func (x *BlockchainHeightResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainHeightResponseProto.ProtoReflect.Descriptor instead.
func (*BlockchainHeightResponseProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{9}
}

func (x *BlockchainHeightResponseProto) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// BlockDownloadRequestProto represents a block download request range.
type BlockDownloadRequestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From uint64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To   uint64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *BlockDownloadRequestProto) Reset() {
	*x = BlockDownloadRequestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDownloadRequestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDownloadRequestProto) ProtoMessage() {}

func (x *BlockDownloadRequestProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDownloadRequestProto.ProtoReflect.Descriptor instead.
func (*BlockDownloadRequestProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{10}
}

func (x *BlockDownloadRequestProto) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *BlockDownloadRequestProto) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

// BlockDownloadResponseProto represents a block download response.
type BlockDownloadResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       uint64              `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To         uint64              `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Error      bool                `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
	NodeHeight uint64              `protobuf:"varint,4,opt,name=node_height,json=nodeHeight,proto3" json:"node_height,omitempty"`
	Blocks     []*block.ProtoBlock `protobuf:"bytes,5,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *BlockDownloadResponseProto) Reset() {
	*x = BlockDownloadResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockDownloadResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDownloadResponseProto) ProtoMessage() {}

func (x *BlockDownloadResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDownloadResponseProto.ProtoReflect.Descriptor instead.
func (*BlockDownloadResponseProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{11}
}

func (x *BlockDownloadResponseProto) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *BlockDownloadResponseProto) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *BlockDownloadResponseProto) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *BlockDownloadResponseProto) GetNodeHeight() uint64 {
	if x != nil {
		return x.NodeHeight
	}
	return 0
}

func (x *BlockDownloadResponseProto) GetBlocks() []*block.ProtoBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

// DownloadContractProto represents a download contract.
type DownloadContractProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHosterResponse         *DataQueryResponseProto `protobuf:"bytes,1,opt,name=file_hoster_response,json=fileHosterResponse,proto3" json:"file_hoster_response,omitempty"`
	FileRequesterNodePublicKey []byte                  `protobuf:"bytes,2,opt,name=file_requester_node_public_key,json=fileRequesterNodePublicKey,proto3" json:"file_requester_node_public_key,omitempty"`
	FileHashesNeeded           [][]byte                `protobuf:"bytes,3,rep,name=file_hashes_needed,json=fileHashesNeeded,proto3" json:"file_hashes_needed,omitempty"`
	// file_hashes_sizes contains the file sizes of each hash in file_hashes.
	FileHashesNeededSizes []uint64 `protobuf:"varint,4,rep,packed,name=file_hashes_needed_sizes,json=fileHashesNeededSizes,proto3" json:"file_hashes_needed_sizes,omitempty"`
	VerifierPublicKey     []byte   `protobuf:"bytes,5,opt,name=verifier_public_key,json=verifierPublicKey,proto3" json:"verifier_public_key,omitempty"`
	VerifierFees          string   `protobuf:"bytes,6,opt,name=verifier_fees,json=verifierFees,proto3" json:"verifier_fees,omitempty"`
	ContractHash          []byte   `protobuf:"bytes,7,opt,name=contract_hash,json=contractHash,proto3" json:"contract_hash,omitempty"`
	VerifierSignature     []byte   `protobuf:"bytes,8,opt,name=verifier_signature,json=verifierSignature,proto3" json:"verifier_signature,omitempty"`
}

func (x *DownloadContractProto) Reset() {
	*x = DownloadContractProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadContractProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadContractProto) ProtoMessage() {}

func (x *DownloadContractProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadContractProto.ProtoReflect.Descriptor instead.
func (*DownloadContractProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{12}
}

func (x *DownloadContractProto) GetFileHosterResponse() *DataQueryResponseProto {
	if x != nil {
		return x.FileHosterResponse
	}
	return nil
}

func (x *DownloadContractProto) GetFileRequesterNodePublicKey() []byte {
	if x != nil {
		return x.FileRequesterNodePublicKey
	}
	return nil
}

func (x *DownloadContractProto) GetFileHashesNeeded() [][]byte {
	if x != nil {
		return x.FileHashesNeeded
	}
	return nil
}

func (x *DownloadContractProto) GetFileHashesNeededSizes() []uint64 {
	if x != nil {
		return x.FileHashesNeededSizes
	}
	return nil
}

func (x *DownloadContractProto) GetVerifierPublicKey() []byte {
	if x != nil {
		return x.VerifierPublicKey
	}
	return nil
}

func (x *DownloadContractProto) GetVerifierFees() string {
	if x != nil {
		return x.VerifierFees
	}
	return ""
}

func (x *DownloadContractProto) GetContractHash() []byte {
	if x != nil {
		return x.ContractHash
	}
	return nil
}

func (x *DownloadContractProto) GetVerifierSignature() []byte {
	if x != nil {
		return x.VerifierSignature
	}
	return nil
}

// DownloadContractInTransactionDataProto is a contract metadata with the smallest fingerprint.
type DownloadContractInTransactionDataProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractHash               []byte `protobuf:"bytes,1,opt,name=contract_hash,json=contractHash,proto3" json:"contract_hash,omitempty"`
	FileRequesterNodePublicKey []byte `protobuf:"bytes,2,opt,name=file_requester_node_public_key,json=fileRequesterNodePublicKey,proto3" json:"file_requester_node_public_key,omitempty"`
	FileHosterNodePublicKey    []byte `protobuf:"bytes,3,opt,name=file_hoster_node_public_key,json=fileHosterNodePublicKey,proto3" json:"file_hoster_node_public_key,omitempty"`
	VerifierPublicKey          []byte `protobuf:"bytes,4,opt,name=verifier_public_key,json=verifierPublicKey,proto3" json:"verifier_public_key,omitempty"`
	VerifierFees               string `protobuf:"bytes,5,opt,name=verifier_fees,json=verifierFees,proto3" json:"verifier_fees,omitempty"`
	FileHosterFees             string `protobuf:"bytes,6,opt,name=file_hoster_fees,json=fileHosterFees,proto3" json:"file_hoster_fees,omitempty"`
}

func (x *DownloadContractInTransactionDataProto) Reset() {
	*x = DownloadContractInTransactionDataProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadContractInTransactionDataProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadContractInTransactionDataProto) ProtoMessage() {}

func (x *DownloadContractInTransactionDataProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadContractInTransactionDataProto.ProtoReflect.Descriptor instead.
func (*DownloadContractInTransactionDataProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{13}
}

func (x *DownloadContractInTransactionDataProto) GetContractHash() []byte {
	if x != nil {
		return x.ContractHash
	}
	return nil
}

func (x *DownloadContractInTransactionDataProto) GetFileRequesterNodePublicKey() []byte {
	if x != nil {
		return x.FileRequesterNodePublicKey
	}
	return nil
}

func (x *DownloadContractInTransactionDataProto) GetFileHosterNodePublicKey() []byte {
	if x != nil {
		return x.FileHosterNodePublicKey
	}
	return nil
}

func (x *DownloadContractInTransactionDataProto) GetVerifierPublicKey() []byte {
	if x != nil {
		return x.VerifierPublicKey
	}
	return nil
}

func (x *DownloadContractInTransactionDataProto) GetVerifierFees() string {
	if x != nil {
		return x.VerifierFees
	}
	return ""
}

func (x *DownloadContractInTransactionDataProto) GetFileHosterFees() string {
	if x != nil {
		return x.FileHosterFees
	}
	return ""
}

// DownloadContractsHashesProto contains a list of contracts hashes which will be send as a transaction data payload.
type DownloadContractsHashesProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contracts []*DownloadContractInTransactionDataProto `protobuf:"bytes,1,rep,name=contracts,proto3" json:"contracts,omitempty"`
}

func (x *DownloadContractsHashesProto) Reset() {
	*x = DownloadContractsHashesProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadContractsHashesProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadContractsHashesProto) ProtoMessage() {}

func (x *DownloadContractsHashesProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadContractsHashesProto.ProtoReflect.Descriptor instead.
func (*DownloadContractsHashesProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{14}
}

func (x *DownloadContractsHashesProto) GetContracts() []*DownloadContractInTransactionDataProto {
	if x != nil {
		return x.Contracts
	}
	return nil
}

// MerkleTreeNodesOfFileContractProto is a message which contains a list of merkle tree nodes, contract and file hashes.
type MerkleTreeNodesOfFileContractProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractHash    []byte   `protobuf:"bytes,1,opt,name=contract_hash,json=contractHash,proto3" json:"contract_hash,omitempty"`
	FileHash        []byte   `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	MerkleTreeNodes [][]byte `protobuf:"bytes,3,rep,name=merkle_tree_nodes,json=merkleTreeNodes,proto3" json:"merkle_tree_nodes,omitempty"`
}

func (x *MerkleTreeNodesOfFileContractProto) Reset() {
	*x = MerkleTreeNodesOfFileContractProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerkleTreeNodesOfFileContractProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleTreeNodesOfFileContractProto) ProtoMessage() {}

func (x *MerkleTreeNodesOfFileContractProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleTreeNodesOfFileContractProto.ProtoReflect.Descriptor instead.
func (*MerkleTreeNodesOfFileContractProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{15}
}

func (x *MerkleTreeNodesOfFileContractProto) GetContractHash() []byte {
	if x != nil {
		return x.ContractHash
	}
	return nil
}

func (x *MerkleTreeNodesOfFileContractProto) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *MerkleTreeNodesOfFileContractProto) GetMerkleTreeNodes() [][]byte {
	if x != nil {
		return x.MerkleTreeNodes
	}
	return nil
}

// KeyIVProto is a message that represents a data encryption payload request to verifier node.
type KeyIVProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractHash       []byte `protobuf:"bytes,1,opt,name=contract_hash,json=contractHash,proto3" json:"contract_hash,omitempty"`
	FileHash           []byte `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	FileMerkleRootHash []byte `protobuf:"bytes,3,opt,name=file_merkle_root_hash,json=fileMerkleRootHash,proto3" json:"file_merkle_root_hash,omitempty"`
}

func (x *KeyIVProto) Reset() {
	*x = KeyIVProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyIVProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyIVProto) ProtoMessage() {}

func (x *KeyIVProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyIVProto.ProtoReflect.Descriptor instead.
func (*KeyIVProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{16}
}

func (x *KeyIVProto) GetContractHash() []byte {
	if x != nil {
		return x.ContractHash
	}
	return nil
}

func (x *KeyIVProto) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *KeyIVProto) GetFileMerkleRootHash() []byte {
	if x != nil {
		return x.FileMerkleRootHash
	}
	return nil
}

// KeyIVRequestProto is a message that represents a list of data encryption payloads to verifier node.
type KeyIVRequestsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIvs []*KeyIVProto `protobuf:"bytes,1,rep,name=key_ivs,json=keyIvs,proto3" json:"key_ivs,omitempty"`
}

func (x *KeyIVRequestsProto) Reset() {
	*x = KeyIVRequestsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyIVRequestsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyIVRequestsProto) ProtoMessage() {}

func (x *KeyIVRequestsProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyIVRequestsProto.ProtoReflect.Descriptor instead.
func (*KeyIVRequestsProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{17}
}

func (x *KeyIVRequestsProto) GetKeyIvs() []*KeyIVProto {
	if x != nil {
		return x.KeyIvs
	}
	return nil
}

// KeyIVRandomizedFileSegmentsEnvelopeProto is a list of KeyIVRandomizedFileSegmentsProto to be sent to the file requester all together.
type KeyIVRandomizedFileSegmentsEnvelopeProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyIvRandomizedFileSegments []*KeyIVRandomizedFileSegmentsProto `protobuf:"bytes,1,rep,name=key_iv_randomized_file_segments,json=keyIvRandomizedFileSegments,proto3" json:"key_iv_randomized_file_segments,omitempty"`
}

func (x *KeyIVRandomizedFileSegmentsEnvelopeProto) Reset() {
	*x = KeyIVRandomizedFileSegmentsEnvelopeProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyIVRandomizedFileSegmentsEnvelopeProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyIVRandomizedFileSegmentsEnvelopeProto) ProtoMessage() {}

func (x *KeyIVRandomizedFileSegmentsEnvelopeProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyIVRandomizedFileSegmentsEnvelopeProto.ProtoReflect.Descriptor instead.
func (*KeyIVRandomizedFileSegmentsEnvelopeProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{18}
}

func (x *KeyIVRandomizedFileSegmentsEnvelopeProto) GetKeyIvRandomizedFileSegments() []*KeyIVRandomizedFileSegmentsProto {
	if x != nil {
		return x.KeyIvRandomizedFileSegments
	}
	return nil
}

// KeyIVRandomizedFileSegmentsProto is a message which contains the private key, the iv, encryption type and randomized order of segments and the raw unencrypted data size.
// this message is sent from the file hoster to the verifier.
// this message should be written to the netowrk stream and after read
// the total_size_raw_unencrypted_segments number of bytes
type KeyIVRandomizedFileSegmentsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSize                        uint64  `protobuf:"varint,1,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ContractHash                    []byte  `protobuf:"bytes,2,opt,name=contract_hash,json=contractHash,proto3" json:"contract_hash,omitempty"`
	FileHash                        []byte  `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	Key                             []byte  `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Iv                              []byte  `protobuf:"bytes,5,opt,name=iv,proto3" json:"iv,omitempty"`
	MerkleRootHash                  []byte  `protobuf:"bytes,6,opt,name=merkle_root_hash,json=merkleRootHash,proto3" json:"merkle_root_hash,omitempty"`
	EncryptionType                  int32   `protobuf:"varint,7,opt,name=encryption_type,json=encryptionType,proto3" json:"encryption_type,omitempty"`
	RandomizedSegments              []int32 `protobuf:"varint,8,rep,packed,name=randomized_segments,json=randomizedSegments,proto3" json:"randomized_segments,omitempty"`
	TotalSizeRawUnencryptedSegments uint64  `protobuf:"varint,9,opt,name=total_size_raw_unencrypted_segments,json=totalSizeRawUnencryptedSegments,proto3" json:"total_size_raw_unencrypted_segments,omitempty"`
	Error                           string  `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *KeyIVRandomizedFileSegmentsProto) Reset() {
	*x = KeyIVRandomizedFileSegmentsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyIVRandomizedFileSegmentsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyIVRandomizedFileSegmentsProto) ProtoMessage() {}

func (x *KeyIVRandomizedFileSegmentsProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyIVRandomizedFileSegmentsProto.ProtoReflect.Descriptor instead.
func (*KeyIVRandomizedFileSegmentsProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{19}
}

func (x *KeyIVRandomizedFileSegmentsProto) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *KeyIVRandomizedFileSegmentsProto) GetContractHash() []byte {
	if x != nil {
		return x.ContractHash
	}
	return nil
}

func (x *KeyIVRandomizedFileSegmentsProto) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *KeyIVRandomizedFileSegmentsProto) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyIVRandomizedFileSegmentsProto) GetIv() []byte {
	if x != nil {
		return x.Iv
	}
	return nil
}

func (x *KeyIVRandomizedFileSegmentsProto) GetMerkleRootHash() []byte {
	if x != nil {
		return x.MerkleRootHash
	}
	return nil
}

func (x *KeyIVRandomizedFileSegmentsProto) GetEncryptionType() int32 {
	if x != nil {
		return x.EncryptionType
	}
	return 0
}

func (x *KeyIVRandomizedFileSegmentsProto) GetRandomizedSegments() []int32 {
	if x != nil {
		return x.RandomizedSegments
	}
	return nil
}

func (x *KeyIVRandomizedFileSegmentsProto) GetTotalSizeRawUnencryptedSegments() uint64 {
	if x != nil {
		return x.TotalSizeRawUnencryptedSegments
	}
	return 0
}

func (x *KeyIVRandomizedFileSegmentsProto) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// FileTransferInfoProto is a message which includes the contract hash, file hash and the size of the file.
// this message is a request payload from file downloader node to file hoster node.
// when this message is received, it should start writing to the network stream the data which is encrypted
// and cut into shuffled segments
type FileTransferInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractHash []byte `protobuf:"bytes,1,opt,name=contract_hash,json=contractHash,proto3" json:"contract_hash,omitempty"`
	FileHash     []byte `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	FileSize     uint64 `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	// from indicates the starting file byte range to be requested
	From int64 `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	// to indicates the end of the file byte range to be requested
	To int64 `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *FileTransferInfoProto) Reset() {
	*x = FileTransferInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_protocols_messages_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferInfoProto) ProtoMessage() {}

func (x *FileTransferInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_node_protocols_messages_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferInfoProto.ProtoReflect.Descriptor instead.
func (*FileTransferInfoProto) Descriptor() ([]byte, []int) {
	return file_node_protocols_messages_messages_proto_rawDescGZIP(), []int{20}
}

func (x *FileTransferInfoProto) GetContractHash() []byte {
	if x != nil {
		return x.ContractHash
	}
	return nil
}

func (x *FileTransferInfoProto) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *FileTransferInfoProto) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileTransferInfoProto) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *FileTransferInfoProto) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

var File_node_protocols_messages_messages_proto protoreflect.FileDescriptor

var file_node_protocols_messages_messages_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x1a, 0x1d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x0d, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x00, 0x52,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00,
	0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x22, 0x6f, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe9, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x66,
	0x65, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x69, 0x0a, 0x1e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0x90, 0x01, 0x0a, 0x15,
	0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xf9,
	0x02, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x22, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x42,
	0x79, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x68, 0x61, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x53,
	0x69, 0x7a, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x15, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x34, 0x0a, 0x1e, 0x44, 0x61,
	0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0x66, 0x0a, 0x24, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x3f, 0x0a, 0x19, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x06,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0xbf, 0x03, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x52, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x15, 0x66, 0x69, 0x6c, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2d, 0x0a, 0x12, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x26, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x1e, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x1a, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x3c, 0x0a,
	0x1b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x17, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x46, 0x65, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x46, 0x65, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x1c, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x22, 0x4d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4f, 0x66,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x74, 0x72,
	0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0f,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0x81, 0x01, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x49, 0x56, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x31, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x12, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x43, 0x0a, 0x12, 0x4b, 0x65, 0x79, 0x49, 0x56, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x56, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x76, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x28, 0x4b, 0x65, 0x79,
	0x49, 0x56, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x70, 0x0a, 0x1f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x76, 0x5f,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x56, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x1b, 0x6b, 0x65, 0x79, 0x49,
	0x76, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8b, 0x03, 0x0a, 0x20, 0x4b, 0x65, 0x79, 0x49,
	0x56, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x76, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x4c, 0x0a, 0x23, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x72, 0x61, 0x77, 0x5f, 0x75, 0x6e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x61, 0x77, 0x55, 0x6e, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x6f, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x66, 0x69, 0x6c, 0x65, 0x67, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x66, 0x69, 0x6c, 0x65, 0x67, 0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_protocols_messages_messages_proto_rawDescOnce sync.Once
	file_node_protocols_messages_messages_proto_rawDescData = file_node_protocols_messages_messages_proto_rawDesc
)

func file_node_protocols_messages_messages_proto_rawDescGZIP() []byte {
	file_node_protocols_messages_messages_proto_rawDescOnce.Do(func() {
		file_node_protocols_messages_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_protocols_messages_messages_proto_rawDescData)
	})
	return file_node_protocols_messages_messages_proto_rawDescData
}

var file_node_protocols_messages_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_node_protocols_messages_messages_proto_goTypes = []interface{}{
	(*GossipPayload)(nil),                            // 0: messages.GossipPayload
	(*ProtoBlocks)(nil),                              // 1: messages.ProtoBlocks
	(*StorageQueryRequestProto)(nil),                 // 2: messages.StorageQueryRequestProto
	(*StorageQueryResponseProto)(nil),                // 3: messages.StorageQueryResponseProto
	(*StorageFileUploadMetadataProto)(nil),           // 4: messages.StorageFileUploadMetadataProto
	(*DataQueryRequestProto)(nil),                    // 5: messages.DataQueryRequestProto
	(*DataQueryResponseProto)(nil),                   // 6: messages.DataQueryResponseProto
	(*DataQueryResponseTransferProto)(nil),           // 7: messages.DataQueryResponseTransferProto
	(*DataQueryResponseTransferResultProto)(nil),     // 8: messages.DataQueryResponseTransferResultProto
	(*BlockchainHeightResponseProto)(nil),            // 9: messages.BlockchainHeightResponseProto
	(*BlockDownloadRequestProto)(nil),                // 10: messages.BlockDownloadRequestProto
	(*BlockDownloadResponseProto)(nil),               // 11: messages.BlockDownloadResponseProto
	(*DownloadContractProto)(nil),                    // 12: messages.DownloadContractProto
	(*DownloadContractInTransactionDataProto)(nil),   // 13: messages.DownloadContractInTransactionDataProto
	(*DownloadContractsHashesProto)(nil),             // 14: messages.DownloadContractsHashesProto
	(*MerkleTreeNodesOfFileContractProto)(nil),       // 15: messages.MerkleTreeNodesOfFileContractProto
	(*KeyIVProto)(nil),                               // 16: messages.KeyIVProto
	(*KeyIVRequestsProto)(nil),                       // 17: messages.KeyIVRequestsProto
	(*KeyIVRandomizedFileSegmentsEnvelopeProto)(nil), // 18: messages.KeyIVRandomizedFileSegmentsEnvelopeProto
	(*KeyIVRandomizedFileSegmentsProto)(nil),         // 19: messages.KeyIVRandomizedFileSegmentsProto
	(*FileTransferInfoProto)(nil),                    // 20: messages.FileTransferInfoProto
	(*transaction.ProtoTransaction)(nil),             // 21: transaction.ProtoTransaction
	(*block.ProtoBlock)(nil),                         // 22: block.ProtoBlock
}
var file_node_protocols_messages_messages_proto_depIdxs = []int32{
	1,  // 0: messages.GossipPayload.blocks:type_name -> messages.ProtoBlocks
	21, // 1: messages.GossipPayload.transaction:type_name -> transaction.ProtoTransaction
	5,  // 2: messages.GossipPayload.query:type_name -> messages.DataQueryRequestProto
	2,  // 3: messages.GossipPayload.storage_query:type_name -> messages.StorageQueryRequestProto
	22, // 4: messages.ProtoBlocks.blocks:type_name -> block.ProtoBlock
	6,  // 5: messages.DataQueryResponseTransferResultProto.responses:type_name -> messages.DataQueryResponseProto
	22, // 6: messages.BlockDownloadResponseProto.blocks:type_name -> block.ProtoBlock
	6,  // 7: messages.DownloadContractProto.file_hoster_response:type_name -> messages.DataQueryResponseProto
	13, // 8: messages.DownloadContractsHashesProto.contracts:type_name -> messages.DownloadContractInTransactionDataProto
	16, // 9: messages.KeyIVRequestsProto.key_ivs:type_name -> messages.KeyIVProto
	19, // 10: messages.KeyIVRandomizedFileSegmentsEnvelopeProto.key_iv_randomized_file_segments:type_name -> messages.KeyIVRandomizedFileSegmentsProto
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_node_protocols_messages_messages_proto_init() }
func file_node_protocols_messages_messages_proto_init() {
	if File_node_protocols_messages_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_protocols_messages_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageQueryRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageQueryResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageFileUploadMetadataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataQueryRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataQueryResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataQueryResponseTransferProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataQueryResponseTransferResultProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainHeightResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDownloadRequestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockDownloadResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadContractProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadContractInTransactionDataProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadContractsHashesProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerkleTreeNodesOfFileContractProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyIVProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyIVRequestsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyIVRandomizedFileSegmentsEnvelopeProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyIVRandomizedFileSegmentsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_protocols_messages_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_node_protocols_messages_messages_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GossipPayload_Blocks)(nil),
		(*GossipPayload_Transaction)(nil),
		(*GossipPayload_Query)(nil),
		(*GossipPayload_StorageQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_protocols_messages_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_node_protocols_messages_messages_proto_goTypes,
		DependencyIndexes: file_node_protocols_messages_messages_proto_depIdxs,
		MessageInfos:      file_node_protocols_messages_messages_proto_msgTypes,
	}.Build()
	File_node_protocols_messages_messages_proto = out.File
	file_node_protocols_messages_messages_proto_rawDesc = nil
	file_node_protocols_messages_messages_proto_goTypes = nil
	file_node_protocols_messages_messages_proto_depIdxs = nil
}
